{"version":3,"sources":["scripts/main.js"],"names":["getParentList","document","querySelector","childrentList","querySelectorAll","sortList","listChildren","sortedList","sort","a","b","replacementSigns","dataset","salary","append","string","replace","getEmployees","listOfEmployees","map","person","name","innerText"],"mappings":";AAAA,aA4BA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA1BA,IAAMA,EAAgBC,SAASC,cAAc,MACvCC,EAAoBF,EAAAA,SAASG,iBAAiB,kBAEpD,SAASC,EAASC,GACVC,IAAAA,EAAaD,EAAaE,KAAK,SAACC,EAAGC,GACvCC,OAAAA,EAAiBD,EAAEE,QAAQC,QAAUF,EAAiBF,EAAEG,QAAQC,UAElEb,EAAcc,OAAdd,MAAAA,EAAwBO,EAAAA,IAG1B,SAASI,EAAiBI,GACjBA,OAAAA,EAAOC,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAG9C,SAASC,EAAaX,GAQbY,OAPiBZ,EAAaa,IAAI,SAAAC,GAAM,OAAA,EAAA,CAE3CC,KAAMD,EAAOE,WACVF,EAAOR,WAOhBP,EAASF,GACTc,EAAad","file":"main.55009641.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst getParentList = document.querySelector('ul');\nconst childrentList = [...document.querySelectorAll('[data-salary]')];\n\nfunction sortList(listChildren) {\n  const sortedList = listChildren.sort((a, b) =>\n    replacementSigns(b.dataset.salary) - replacementSigns(a.dataset.salary));\n\n  getParentList.append(...sortedList);\n}\n\nfunction replacementSigns(string) {\n  return string.replace('$', '').replace(',', '');\n}\n\nfunction getEmployees(listChildren) {\n  const listOfEmployees = listChildren.map(person => (\n    {\n      name: person.innerText,\n      ...person.dataset,\n    }\n  ));\n\n  return listOfEmployees;\n}\n\nsortList(childrentList);\ngetEmployees(childrentList);\n"]}